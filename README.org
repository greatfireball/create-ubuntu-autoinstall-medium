* Generate a new mini.iso with autoinstallation capabilities

** References
I used the following links to get the required information:
 - http://overtag.dk/wordpress/2013/08/ubuntu-kickstart-preseeding-and-wireless-wlan/
 - http://www.thegeekstuff.com/2009/07/how-to-view-modify-and-recreate-initrd-img/
 - http://askubuntu.com/questions/122505/how-do-i-create-a-completely-unattended-install-of-ubuntu
 - https://help.ubuntu.com/community/KickstartCompatibility

** 
** Download 16.04 mini.iso
Download a trusty mini.iso and check if the download went well
#+BEGIN_SRC sh :shebang "#!/bin/bash" :tangle iso-creation.sh
ubunturelease="xenial"
wget --quiet 'http://archive.ubuntu.com/ubuntu/dists/'"$ubunturelease"'/main/installer-amd64/current/images/netboot/mini.iso'
wget --quiet -O - 'http://archive.ubuntu.com/ubuntu/dists/'"$ubunturelease"'/main/installer-amd64/current/images/MD5SUMS' | grep "netboot/mini.iso" | sed 's/netboot\///g' > MD5SUMS
md5sum -c MD5SUMS
#+END_SRC

#+results:
: ./mini.iso: OK

** Mount the CD image and copy the content
#+BEGIN_SRC sh :tangle iso-creation.sh
mkdir iso
#+END_SRC

#+results:

#+BEGIN_SRC sh :tangle iso-creation.sh
sudo mount -o loop -t iso9660 mini.iso iso
#+END_SRC

#+BEGIN_SRC sh :tangle iso-creation.sh
cp -R iso custom
sudo umount iso
chmod -R +Xrw custom
#+END_SRC

#+results:

** Uncompress the initrd.gz
#+BEGIN_SRC sh  :tangle iso-creation.sh
cd custom
mkdir initrd
cd initrd
zcat ../initrd.gz | cpio -id
#+END_SRC

#+results:

** Adding a kickstart file to the initrd folder
#+BEGIN_SRC sh  :tangle iso-creation.sh
mkdir -p var/ks-install/
#+END_SRC

#+results:

The password which is used for user creation can be generated using the following code snipped:
#+BEGIN_SRC sh  :tangle iso-creation.sh
sudo apt-get install whois # package contains the command mkpasswd
mkpasswd -m sha-512        # generate a sha512 hashed password
#+END_SRC

The default password for the installation is Umapi7ILef92, but in the
last step the password is marked as expired and has to be set after
first login.
#+BEGIN_SRC sh  :tangle iso-creation.sh
USERPASSWD='$6$rXZRlzL24D$UeXGSOwb6KATwUqfxyCIBs4A1mzSp.tTu/z9WGY9mGC6GVKXNuQNylmLbVTQdk2j5/UsN.nDXCr/wfvxd24qa1'
USERNAME='cctbadmin'
USERFULLNAME='CCTB Administrator,cctb-it@lists.uni-wuerzburg.de'

cat <<EOF | tee var/ks-install/ks.cfg
#Generated by Kickstart Configuration
#platform=AMD64 or Intel EM64T

#System language
lang en_GB
#Language modules to install
langsupport en_GB de_DE --default=en_GB
#System keyboard
keyboard de
#System mouse
mouse
#System timezone
timezone Europe/Berlin
#Root password
rootpw --disabled
#Initial user
user $USERNAME --fullname "$USERFULLNAME" --iscrypted --password '$USERPASSWD'
#Reboot after installation
reboot
#Use text mode install
text
#Install OS instead of upgrade
install
#Use CDROM installation media
url --url ftp://ftp.halifax.rwth-aachen.de/ubuntu/
#System bootloader configuration
bootloader --location=mbr
#Clear the Master Boot Record
zerombr yes
#Partition clearing information
clearpart --all --initlabel
#Disk partitioning information
part swap --size 12000 --asprimary
part / --fstype ext4 --size 1 --grow --asprimary
#System authorization infomation
auth  --useshadow  --enablemd5 #--enablenis --nisdomain bioinformatik --nisserver 132.187.22.129
# Network
network --bootproto=dhcp --device=eth0
#Firewall configuration
firewall --enabled --ssh
#Do not configure the X Window System
skipx
#Package install information
%packages
openssh-server
openssh-client
#autofs
#nfs-common
git

%post
# move genomics home directory to a separate folder
# check if the user exists
mkdir -p /home2    2>&1 | tee --append /root/post_install.log
if id -u $USERNAME >/dev/null 2>&1; then
        echo "user exists" 2>&1 | tee --append /root/post_install.log
        sudo usermod  -d /home2/$USERNAME  -m $USERNAME 2>&1 | tee --append /root/post_install.log
else
        echo "user does not exist" 2>&1 | tee --append /root/post_install.log
        useradd --comment "$USERFULLNAME"\
             --home-dir /home2/$USERNAME \
             --create-home \
             --shell /bin/bash \
             --password '$USERPASSWD' \
             --groups sudo \
             $USERNAME 2>&1 | tee --append /root/post_install.log

        echo -e "Umapi7ILef92\nUmapi7ILef92" | passwd $USERNAME
fi

# set the genomics password to expired to trigger a password reset on
# first login
passwd -e "$USERNAME" 2>&1 | tee --append /root/post_install.log

# prepare NIS/automount
#date +"# [%Y-%m-%d %H:%M:%S] Added by the kickstart script to add automount capabilities
#automount: nis files" >> /etc/nsswitch.conf

## Update packages and keys list
apt-key update 2>&1 | tee --append /root/post_install.log
apt-get update 2>&1 | tee --append /root/post_install.log

apt-get dist-upgrade --assume-yes 2>&1 | tee --append /root/post_install.log
EOF
#+END_SRC

** Repacking of the initrd.gz
#+BEGIN_SRC sh :tangle iso-creation.sh
cd ..
rm ./initrd.gz
cd initrd
find . | cpio --create --format='newc' | gzip > ../initrd.gz
cd ..
rm -rf initrd
#+END_SRC

#+results:

** Changing the txt.cfg file to add kickstart file
#+BEGIN_SRC sh :tangle iso-creation.sh
sed -i '/append/s+--+ks=file:/var/ks-install/ks.cfg preseed/file=/cdrom/ks.preseed --+g' txt.cfg
#+END_SRC

#+results:

** Adding a timeout to the command file to pick default intallation after 10 s
#+BEGIN_SRC sh :tangle iso-creation.sh
find -maxdepth 1 -type f | xargs --no-run-if-empty grep -il "timeout[[:space:]]" | xargs --no-run-if-empty sed -i 's/timeout .*/timeout 10/g'
cd ..
#+END_SRC

#+results:

** Recreate the ISO file
#+BEGIN_SRC sh :tangle iso-creation.sh
  mkisofs \
      -r \
      -V "Custom Ubuntu Netboot image" \
      -cache-inodes \
      -J \
      -l \
      -b isolinux.bin \
      -c boot.cat \
      -no-emul-boot \
      -boot-load-size 4 \
      -boot-info-table \
      -o custom_"$ubunturelease".iso \
      custom
#+END_SRC

** Bugs
*** TODO Move folder of genomics
*** TODO Perform rest of Installation after first boot
